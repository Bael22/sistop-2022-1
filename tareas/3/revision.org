* Revisi√≥n de la tarea #3

  [[./README.md][Leer el planteamiento]]

** Ricardo Carrillo
- Documentaci√≥n :: /No entregada/
- Archivos :: [[./CarrilloRicardo/t3.py][t3.py]]
- Comentarios ::
  - De los mecanismos b√°sicos, no entregaste /Ronda/
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì (parcial)
  - Esquema visual :: ‚úó
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 6

** Raul Cruz
- Documentaci√≥n :: [[./CruzRaul/Documentacion.pdf][Documentacion.pdf]]
- Archivos :: [[./CruzRaul/comparacion_planificadores.py][comparacion_planificadores.py]]
- Comentarios ::
  - Hice un par de pruebas viendo la ejecuci√≥n de cargas aleatorias
    con tu implementaci√≥n de =rr1()= y =rr4()=, y /me parece/ que el
    orden en que planific√≥ los procesos es correcto
    - Ya, tambi√©n encontr√© casos en que se queda sin salir del c√°lculo
    - ¬øSer√° que el error que refieres se debe a que a veces generas
      conjuntos de procesos con /hoyos/ de inactividad entre ellos?
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 9

** Bryan D√≠az
- Documentaci√≥n :: [[./D√≠azBryan/T3_Notas.txt][T3_Notas.txt]]
- Archivos :: [[./D√≠azBryan/T3_D√≠azBryan.py][T3_D√≠azBryan.py]]
- Comentarios ::
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 9

** Nestor Fuerte y Erick Vazquez
- Documentaci√≥n :: /No entregada/
- Archivos :: [[./FuerteNestor-VazquezErick/planificacion_proc.py][planificacion_proc.py]]
- Comentarios ::
  - ¬°Les falt√≥ implementar SPN!
  - ¬°Muy bien! Se dieron cuenta que podr√≠an tener que implementar
    /huecos/ si los conjuntos de procesos autogenerados no son
    contiguos
    - Esto llevo, sin embargo, a un peque√±o bug en las funciones de
      =ronda=: Al iniciar la evaluaci√≥n de la lista, insertan un tick
      de espera para =t=0=:
      #+begin_src text
	Ronda 0, tabla diapositivas:
	 A:0 t: 3; B:1 t: 5; C:3 t: 2; D:9 t: 5; E:12 t: 5;

	FCFS: T=6.20, E=2.20, P=1.74
	AAABBBBBCCDDDDDEEEEE

	RR1: T=7.60, E=3.60, P=1.98
	nABABCABCBDBDEDEDEDEE

	RR4: T=7.20, E=3.20, P=1.88
	nAAABBBBCCBDDDDEEEEDE
      #+end_src
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 8.5

** Alberto Garcia Figueroa y Edgar Garcia
- Documentaci√≥n :: [[./GarciaFigueroaAlberto-GarciaEdgar/Prueba_1.png][Prueba_1.png]], [[./GarciaFigueroaAlberto-GarciaEdgar/Prueba_2.png][Prueba_2.png]], [[./GarciaFigueroaAlberto-GarciaEdgar/Prueba_3.png][Prueba_3.png]], [[./GarciaFigueroaAlberto-GarciaEdgar/readme.md][readme.md]]
- Archivos :: [[./GarciaFigueroaAlberto-GarciaEdgar/FCFS.py][FCFS.py]], [[./GarciaFigueroaAlberto-GarciaEdgar/Proceso.py][Proceso.py]], [[./GarciaFigueroaAlberto-GarciaEdgar/RR.py][RR.py]], [[./GarciaFigueroaAlberto-GarciaEdgar/SPN.py][SPN.py]], [[./GarciaFigueroaAlberto-GarciaEdgar/SRR.py][SRR.py]], [[./GarciaFigueroaAlberto-GarciaEdgar/Tarea3.py][Tarea3.py]]
- Comentarios ::
  - La planificaci√≥n de un conjunto de procesos debe tomar el mismo
    tiempo (las diferencias son de /percepci√≥n/ entre procesos
    √∫nicamente). viendo la siguiente ejecuci√≥n, pueden ver por la mera
    duraci√≥n total que /algo/ anda mal:
    #+begin_src text
      ALGORITMO FCFS
      AABBBDDDDCCCCCCCCEEE
      EL valor de T:10.0
      EL valor de E:6.0
      EL valor de P:2.58
      ALGORITMO RR
      ABADBDBDD

      EL valor de T:6.333333333333333
      EL valor de E:3.3333333333333335
      EL valor de P:2.03
      ALGORITMO SPN
      AABBBDDDD

      EL valor de T:5.333333333333333
      EL valor de E:2.3333333333333335
      EL valor de P:1.64
    #+end_src
    - En esta ejecuci√≥n, parece que simplemente omiti√≥ a =D= y =E=; en
      otras ejecuciones que prob√©, los ejecuta, pero por menor tiempo
  - Veo que /intentaron/ (aunque no funcion√≥) la implementaci√≥n de
    =SRR=. ¬°Muy bien!
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 9

** Rodrigo Jimenez
- Documentaci√≥n :: /No entregada/
- Archivos :: [[./JimenezRodrigo/Tarea3.py][Tarea3.py]]
- Comentarios ::
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 9

** Jorge Manzanares y Jesus Salazar
- Documentaci√≥n :: [[./ManzanaresJorge-SalazarJesus/README.md][README.md]]
- Archivos :: [[./ManzanaresJorge-SalazarJesus/fcfs.py][fcfs.py]], [[./ManzanaresJorge-SalazarJesus/main.py][main.py]], [[./ManzanaresJorge-SalazarJesus/process.py][process.py]], [[./ManzanaresJorge-SalazarJesus/rr.py][rr.py]], [[./ManzanaresJorge-SalazarJesus/scheduler.py][scheduler.py]], [[./ManzanaresJorge-SalazarJesus/spn.py][spn.py]]
- Comentarios ::
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 9

** Carlos Mendoza
- Documentaci√≥n :: [[./MendozaCarlos/Tarea3_Documentacion.pdf][Tarea3_Documentacion.pdf]]
- Archivos :: [[./MendozaCarlos/Tarea3.py][Tarea3.py]]
- Comentarios ::
  - ¬°No le eches la culpa al IDE! Si tu programa se pasma... Es cosa
    tuya, cosa de depurar un poco üòâ
    - Tienes un ciclo que no termina en =rr()=. ¬°Depuremos! Para
      hacerlo, hacemos un ‚Äúembellecedor‚Äù para ver la informaci√≥n de
      =Proceso=:
      #+begin_src python
	class Proceso:
	    # (...)
	    def str(self):
		return('%s: %d+%d' % (self.letra, self.tiempoinicial, self.tiempo))
      #+end_src
      y en el ciclo de tu =rr()=:
      #+begin_src python
        vueltas=0
	while procesosTerminado>0:
	    vueltas=vueltas+1
	    if vueltas>10:
		print('Abortando en t=%d, %s' % (tick,[i.str() for i in copialista]))
		return(False)
      #+end_src
      e iter√© un par de veces hasta que me encontr√© con una cadena de
      procesos que no progres√≥. Me encontr√© que el patr√≥n que hace que
      =rr()= falle es:
      #+begin_src text
	$ for i in $(seq 1 10); do python3 Tarea3.py |grep bortando; done
	Abortando en t=0, ['A: 7+10', 'D: 1+2', 'C: 1+3', 'B: 4+5', 'E: 4+5']
	Abortando en t=0, ['A: 2+10', 'E: 5+7', 'D: 7+10', 'C: 7+9', 'B: 8+9']
	Abortando en t=0, ['A: 1+6', 'D: 1+2', 'B: 2+3', 'C: 9+10', 'E: 2+9']
      #+end_src
      Esto es, siempre que no hay ning√∫n proceso que llegue cuando
      =t=0=, =rr()= se quedar√° d√°ndole vueltas para siempre.

      ¬øY por qu√© no pasa con SPN y FIFO? Porque ah√≠ est√°s ignorando
      los espacios vac√≠os, s√≥lo viendo c√≥mo se ordenar√° el arreglo.
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 9

** Eduardo Moreno
- Documentaci√≥n :: [[./MorenoEduardo/readme.md][readme.md]]
- Archivos :: [[./MorenoEduardo/Tarea3.py][Tarea3.py]]
- Comentarios ::
  - ¬°Vaya! ¬°Por fin uno que parametriza en vez de copiar y modificar!
    ¬°Bienvenida tu funci√≥n =rr(lista,q)=, que funciona con quantums de
    diferentes tama√±os!
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 9

** I√±aky Ordiales
- Documentaci√≥n :: [[./OrdialesInaky/Instrucciones.txt][Instrucciones.txt]]
- Archivos :: [[./OrdialesInaky/tarea3.cpp][tarea3.cpp]]
- Comentarios ::
  - ¬°Muy bonito! Me gusta ver el trabajo que le metiste a esta
    implementaci√≥n.
  - Intent√© encontrar por qu√© tu FB se rompe a veces (y ni siquiera es
    tan frecuente... Si acaso, una de cada 20 llamadas)
    - Me pareci√≥ interesante: Para ver la frecuencia de fallo, hice un
      =for i in $(seq 1 100); do ./t3 >/dev/null;done= para ver
      cu√°ntas veces de cada 100 se /tropezaba/... Y encontre que le
      ocurr√≠a en muchas invocaciones seguidas.
    - Veo que para inicializar la semilla pseudoaleatoria lo haces con
      =srand(time(NULL))=. Para lograr mayor entrop√≠a, te sugiero
      sumarle =getpid()= (tienes que incluir =unistd.h=).
  - Se te pas√≥ agregar =t3= a un =.gitignore= :-√û
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úì
  - Calificaci√≥n :: 10

** Diego Santiago y Armando Ugalde
- Documentaci√≥n :: [[./SantiagoDiego-UgaldeArmando/README.md][README.md]], [[./SantiagoDiego-UgaldeArmando/cargadiapositivas1.png][cargadiapositivas1.png]], [[./SantiagoDiego-UgaldeArmando/cargadiapositivas2.png][cargadiapositivas2.png]], [[./SantiagoDiego-UgaldeArmando/simulacion1-1.png][simulacion1-1.png]], [[./SantiagoDiego-UgaldeArmando/simulacion1-2.png][simulacion1-2.png]], [[./SantiagoDiego-UgaldeArmando/simulacion2-1.png][simulacion2-1.png]], [[./SantiagoDiego-UgaldeArmando/simulacion2-2.png][simulacion2-2.png]]
- Archivos :: [[./SantiagoDiego-UgaldeArmando/SantiagoDiego-UgaldeArmando-1.0-SNAPSHOT-jar-with-dependencies.jar][SantiagoDiego-UgaldeArmando-1.0-SNAPSHOT-jar-with-dependencies.jar]], [[./SantiagoDiego-UgaldeArmando/pom.xml][pom.xml]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/CargaAleatoria.java][CargaAleatoria.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/ComparadorDePlanificadores.java][ComparadorDePlanificadores.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/Proceso.java][Proceso.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/Resultado.java][Resultado.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/planificadores/FirstComeFirstServed.java][FirstComeFirstServed.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/planificadores/MultiLevelFeedbackQueue.java][MultiLevelFeedbackQueue.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/planificadores/Planificadores.java][Planificadores.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/planificadores/RoundRobin.java][RoundRobin.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/planificadores/ShortestProcessNext.java][ShortestProcessNext.java]], [[./SantiagoDiego-UgaldeArmando/src/main/java/mx/unam/sistop/tarea3/utilidades/UtilidadesNumericas.java][UtilidadesNumericas.java]]
- Comentarios ::
  - ¬°Muy buena implementaci√≥n!
  - Completa, correcta y f√°cil de leer. ¬øQu√© m√°s pod√≠a pedir? üòÄ
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úì
  - Calificaci√≥n :: 10

** Miguel Villanueva
- Documentaci√≥n :: [[./VillanuevaMiguel/DetallesTarea3.txt][DetallesTarea3.txt]], [[./VillanuevaMiguel/evidencia.png][evidencia.png]]
- Archivos :: [[./VillanuevaMiguel/algoritmos_deplaneacion.py][algoritmos_deplaneacion.py]]
- Comentarios ::
  - Falt√≥ RR(4) ‚Äî no es terrible, debe ser /muy/ parecido a la
    implementaci√≥n de RR(1).
  - ¬°Qu√© raro que justo SPN te pareciera m√°s dif√≠cil! Es bastante m√°s
    sencillo en general de implementar que =RR(1)=.
  - Me indicas que encontraste un problema... pero no me indicas /qu√©
    problema/ encontraste. Y tu c√≥dig, sin espacios para marcar
    bloques l√≥gicos ni comentarios para explicar lo que haces en cada
    bloque, no es muy amigable para leerlo e intentar mejorar el
    resutlado ‚òπ
- Evaluaci√≥n ::
  - Entrega realizada :: ‚úì
  - Tabla de resultados :: ‚úì
  - Esquema visual :: ‚úì
  - Algortimo de colas m√∫ltiples :: ‚úó
  - Calificaci√≥n :: 8.5
